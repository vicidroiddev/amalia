buildscript {
    repositories {
        google()
        mavenCentral()
    }
}

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id "kotlin-parcelize"
    id "maven-publish"
}

group = "com.github.vicidroiddev"

android {
    compileSdkVersion toolchainVersions.compileSdk
//    buildToolsVersion toolchainVersions.buildTools

    defaultConfig {
        minSdkVersion toolchainVersions.minSdk
        targetSdkVersion toolchainVersions.targetSdk
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    // Target Java 8 to use androidx.lifecycle.DefaultLifecycleObserver
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    lint {
        abortOnError false
    }
    namespace 'com.vicidroid.amalia'
}


dependencies {
    implementation deps.kotlinStdlib

    testImplementation deps.junit
    testImplementation androidXDeps.fragment
    testImplementation deps.mjaarmanMockito
    testImplementation deps.roboelectric
    testImplementation archDeps.archCoreTesting

    // 'api' mimics old 'compile' - resources are made publicly available
    // implementation hides the classes, also a build optimization for gradle.

    implementation deps.coroutines

    // To support persistence of a presenter after config changes
    implementation archDeps.viewmodel

    // To support sending and receiving of events and states on the UI thread
    implementation archDeps.livedata

    // To support DefaultLifecycleObserver, api because presenters are exposed
    implementation archDeps.commonJava8

    // Extensions on Activities
    implementation androidXDeps.appcompat
    implementation androidXDeps.annotation

    // Saved state support in presenters, api because saveStateHandle is exposed
    api archDeps.savedState

    // To access saved state registry owner
    androidXDeps.fragment
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

task classesJar(type: Jar) {
    from "$buildDir/intermediates/classes/release"
}

artifacts {
    archives androidSourcesJar
    archives classesJar
    archives javadocJar
    archives sourcesJar
}


