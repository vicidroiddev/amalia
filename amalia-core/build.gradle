apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.github.dcendents.android-maven'

group = "com.github.vicidroiddev"

buildscript {
    repositories {
        google()
        mavenCentral()
    }
}

android {
    compileSdkVersion toolchainVersions.compileSdk
    buildToolsVersion toolchainVersions.buildTools

    defaultConfig {
        minSdkVersion toolchainVersions.minSdk
        targetSdkVersion toolchainVersions.targetSdk
        versionCode 1
        versionName "1.0 (alpha)"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    // Target Java 8 to use androidx.lifecycle.DefaultLifecycleObserver
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

androidExtensions {
    //PARCELIZE SUPPORT
    experimental = true
}

dependencies {
    implementation deps.kotlinStdlib

    testImplementation deps.junit
    testImplementation androidXDeps.fragment
    testImplementation deps.mjaarmanMockito
    testImplementation deps.roboelectric
    testImplementation archDeps.archCoreTesting

    // 'api' mimics old 'compile' - resources are made publicly available
    // implementation hides the classes, also a build optimization for gradle.

    // To support persistence of a presenter after config changes
    implementation archDeps.viewmodel

    // To support sending and receiving of events and states on the UI thread
    implementation archDeps.livedata

    // To support DefaultLifecycleObserver, api because presenters are exposed
    api archDeps.commonJava8

    // Extensions on Activities
    implementation androidXDeps.appcompat
    implementation androidXDeps.annotation

    // Saved state support in presenters, api because saveStateHandle is exposed
    api archDeps.savedState

    // To access saved state registry owner
    androidXDeps.fragment
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

task classesJar(type: Jar) {
    from "$buildDir/intermediates/classes/release"
}

artifacts {
    archives androidSourcesJar
    archives classesJar
    archives javadocJar
    archives sourcesJar
}

apply plugin: 'kotlin-android-extensions'

